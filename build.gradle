plugins {	id 'java'	id 'org.springframework.boot' version "${springBootGradlePluginVersion}"}group = 'uk.michaelelison'version = '0.0.1-SNAPSHOT'java {	toolchain {		languageVersion = JavaLanguageVersion.of(21)	}}configurations {	compileOnly {		extendsFrom annotationProcessor	}}repositories {	mavenCentral()}dependencies {	implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootDependenciesVersion}")	implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}")	implementation "org.springframework.boot:spring-boot-starter-web"	implementation "org.springframework.boot:spring-boot-starter-data-jpa"	implementation "org.springframework.boot:spring-boot-starter-validation"	implementation "org.modelmapper:modelmapper:${modelmapper}"    implementation 'org.springframework.boot:spring-boot-starter-actuator'    compileOnly "org.projectlombok:lombok"	developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootDependenciesVersion}"	runtimeOnly "org.postgresql:postgresql"	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootDependenciesVersion}"	annotationProcessor "org.projectlombok:lombok:${lombok}"	testImplementation "org.springframework.boot:spring-boot-starter-test"	testImplementation 'io.zonky.test:embedded-postgres:2.0.4'}tasks.named('test') {	useJUnitPlatform()}// Showing deprecationstasks.withType(JavaCompile) {	// Add the flag for detailed deprecation linting	options.compilerArgs += "-Xlint:deprecation"	// Also ensure general deprecation warnings are enabled (often default, but good to be explicit)	options.deprecation = true}